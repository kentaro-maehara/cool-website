{"ast":null,"code":"var _jsxFileName = \"/Users/kentaro_maehara/study-chans/react-apps/udemy/styled_components/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CourseGoalList from \"./components/CourseGoals/CourseGoalList/CourseGoalList\";\nimport CourseInput from \"./components/CourseGoals/CourseInput/CourseInput\";\nimport \"./App.css\";\nimport \"./swatch/bootstrap.css\";\nimport mchammer from \"./img/test/mchammer.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mchmmer = () => {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: mchammer,\n    alt: \"counter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Mchmmer;\n\nconst Navbar = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar navbar-fixed-top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Navbar;\n\nconst App = () => {\n  _s();\n\n  const [courseGoals, setCourseGoals] = useState([{\n    text: \"Do all exercises!\",\n    id: \"g1\"\n  }, {\n    text: \"Finish the course!\",\n    id: \"g2\"\n  }]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({\n        text: enteredText,\n        id: Math.random().toString()\n      });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"No goals found. Maybe add one?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  if (courseGoals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(CourseGoalList, {\n      items: courseGoals,\n      onDeleteItem: deleteItemHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mchammer-gif\",\n      children: [/*#__PURE__*/_jsxDEV(Mchmmer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mchmmer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mchmmer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goal-form\",\n      children: /*#__PURE__*/_jsxDEV(CourseInput, {\n        onAddGoal: addGoalHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"w8Yene/5N4A2v976Es6x9CC5o6w=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Mchmmer\");\n$RefreshReg$(_c2, \"Navbar\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/kentaro_maehara/study-chans/react-apps/udemy/styled_components/src/App.js"],"names":["React","useState","CourseGoalList","CourseInput","mchammer","Mchmmer","Navbar","App","courseGoals","setCourseGoals","text","id","addGoalHandler","enteredText","prevGoals","updatedGoals","unshift","Math","random","toString","deleteItemHandler","goalId","filter","goal","content","textAlign","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAO,WAAP;AACA,OAAO,wBAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,sBAAO;AAAK,IAAA,GAAG,EAAED,QAAV;AAAoB,IAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMC,O;;AAIN,MAAMC,MAAM,GAAG,MAAM;AACnB,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMA,M;;AAIN,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAC7C;AAAES,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,EAAE,EAAE;AAAjC,GAD6C,EAE7C;AAAED,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,EAAE,EAAE;AAAlC,GAF6C,CAAD,CAA9C;;AAKA,QAAMC,cAAc,GAAIC,WAAD,IAAiB;AACtCJ,IAAAA,cAAc,CAAEK,SAAD,IAAe;AAC5B,YAAMC,YAAY,GAAG,CAAC,GAAGD,SAAJ,CAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB;AAAEN,QAAAA,IAAI,EAAEG,WAAR;AAAqBF,QAAAA,EAAE,EAAEM,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAzB,OAArB;AACA,aAAOJ,YAAP;AACD,KAJa,CAAd;AAKD,GAND;;AAQA,QAAMK,iBAAiB,GAAIC,MAAD,IAAY;AACpCZ,IAAAA,cAAc,CAAEK,SAAD,IAAe;AAC5B,YAAMC,YAAY,GAAGD,SAAS,CAACQ,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYU,MAAvC,CAArB;AACA,aAAON,YAAP;AACD,KAHa,CAAd;AAID,GALD;;AAOA,MAAIS,OAAO,gBACT;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,MAAIjB,WAAW,CAACkB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,OAAO,gBACL,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEhB,WAAvB;AAAoC,MAAA,YAAY,EAAEY;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAER;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA,gBACGY;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAtDD;;GAAMjB,G;;MAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport CourseGoalList from \"./components/CourseGoals/CourseGoalList/CourseGoalList\";\nimport CourseInput from \"./components/CourseGoals/CourseInput/CourseInput\";\nimport \"./App.css\";\nimport \"./swatch/bootstrap.css\";\nimport mchammer from \"./img/test/mchammer.gif\";\n\nconst Mchmmer = () => {\n  return <img src={mchammer} alt=\"counter\"></img>;\n};\n\nconst Navbar = () => {\n  return <div className=\"navbar navbar-fixed-top\"></div>;\n};\n\nconst App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: \"Do all exercises!\", id: \"g1\" },\n    { text: \"Finish the course!\", id: \"g2\" },\n  ]);\n\n  const addGoalHandler = (enteredText) => {\n    setCourseGoals((prevGoals) => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = (goalId) => {\n    setCourseGoals((prevGoals) => {\n      const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mchammer-gif\">\n        <Mchmmer />\n        <Mchmmer />\n        <Mchmmer />\n      </div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n        {/* {courseGoals.length > 0 && (\n          <CourseGoalList\n            items={courseGoals}\n            onDeleteItem={deleteItemHandler}\n          />\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n        } */}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}